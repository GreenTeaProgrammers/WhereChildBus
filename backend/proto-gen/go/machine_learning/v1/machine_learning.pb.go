// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: machine_learning/v1/machine_learning.proto

package machine_learningv1

import (
	v1 "github.com/GreenTeaProgrammers/WhereChildBus/backend/proto-gen/go/where_child_bus/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NurseryId string     `protobuf:"bytes,1,opt,name=nursery_id,json=nurseryId,proto3" json:"nursery_id,omitempty"`
	BusId     string     `protobuf:"bytes,2,opt,name=bus_id,json=busId,proto3" json:"bus_id,omitempty"`
	ChildIds  []string   `protobuf:"bytes,3,rep,name=child_ids,json=childIds,proto3" json:"child_ids,omitempty"`
	BusType   v1.BusType `protobuf:"varint,4,opt,name=bus_type,json=busType,proto3,enum=where_child_bus.v1.BusType" json:"bus_type,omitempty"`
}

func (x *TrainRequest) Reset() {
	*x = TrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainRequest) ProtoMessage() {}

func (x *TrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainRequest.ProtoReflect.Descriptor instead.
func (*TrainRequest) Descriptor() ([]byte, []int) {
	return file_machine_learning_v1_machine_learning_proto_rawDescGZIP(), []int{0}
}

func (x *TrainRequest) GetNurseryId() string {
	if x != nil {
		return x.NurseryId
	}
	return ""
}

func (x *TrainRequest) GetBusId() string {
	if x != nil {
		return x.BusId
	}
	return ""
}

func (x *TrainRequest) GetChildIds() []string {
	if x != nil {
		return x.ChildIds
	}
	return nil
}

func (x *TrainRequest) GetBusType() v1.BusType {
	if x != nil {
		return x.BusType
	}
	return v1.BusType(0)
}

type TrainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStarted bool `protobuf:"varint,1,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
}

func (x *TrainResponse) Reset() {
	*x = TrainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainResponse) ProtoMessage() {}

func (x *TrainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainResponse.ProtoReflect.Descriptor instead.
func (*TrainResponse) Descriptor() ([]byte, []int) {
	return file_machine_learning_v1_machine_learning_proto_rawDescGZIP(), []int{1}
}

func (x *TrainResponse) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

type PredResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDetected bool     `protobuf:"varint,1,opt,name=is_detected,json=isDetected,proto3" json:"is_detected,omitempty"`
	ChildIds   []string `protobuf:"bytes,2,rep,name=child_ids,json=childIds,proto3" json:"child_ids,omitempty"`
}

func (x *PredResponse) Reset() {
	*x = PredResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredResponse) ProtoMessage() {}

func (x *PredResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredResponse.ProtoReflect.Descriptor instead.
func (*PredResponse) Descriptor() ([]byte, []int) {
	return file_machine_learning_v1_machine_learning_proto_rawDescGZIP(), []int{2}
}

func (x *PredResponse) GetIsDetected() bool {
	if x != nil {
		return x.IsDetected
	}
	return false
}

func (x *PredResponse) GetChildIds() []string {
	if x != nil {
		return x.ChildIds
	}
	return nil
}

type FaceDetectAndClipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NurseryId string `protobuf:"bytes,1,opt,name=nursery_id,json=nurseryId,proto3" json:"nursery_id,omitempty"`
	ChildId   string `protobuf:"bytes,2,opt,name=child_id,json=childId,proto3" json:"child_id,omitempty"`
}

func (x *FaceDetectAndClipRequest) Reset() {
	*x = FaceDetectAndClipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceDetectAndClipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceDetectAndClipRequest) ProtoMessage() {}

func (x *FaceDetectAndClipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceDetectAndClipRequest.ProtoReflect.Descriptor instead.
func (*FaceDetectAndClipRequest) Descriptor() ([]byte, []int) {
	return file_machine_learning_v1_machine_learning_proto_rawDescGZIP(), []int{3}
}

func (x *FaceDetectAndClipRequest) GetNurseryId() string {
	if x != nil {
		return x.NurseryId
	}
	return ""
}

func (x *FaceDetectAndClipRequest) GetChildId() string {
	if x != nil {
		return x.ChildId
	}
	return ""
}

type FaceDetectAndClipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStarted bool `protobuf:"varint,1,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
}

func (x *FaceDetectAndClipResponse) Reset() {
	*x = FaceDetectAndClipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceDetectAndClipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceDetectAndClipResponse) ProtoMessage() {}

func (x *FaceDetectAndClipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machine_learning_v1_machine_learning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceDetectAndClipResponse.ProtoReflect.Descriptor instead.
func (*FaceDetectAndClipResponse) Descriptor() ([]byte, []int) {
	return file_machine_learning_v1_machine_learning_proto_rawDescGZIP(), []int{4}
}

func (x *FaceDetectAndClipResponse) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

var File_machine_learning_v1_machine_learning_proto protoreflect.FileDescriptor

var file_machine_learning_v1_machine_learning_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x62,
	0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x62, 0x75, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x72, 0x73, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x75, 0x72, 0x73, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x2e, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22,
	0x4c, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a,
	0x18, 0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x43, 0x6c,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x72,
	0x73, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x75, 0x72, 0x73, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x19, 0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x32,
	0xb6, 0x02, 0x0a, 0x16, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x04, 0x50, 0x72,
	0x65, 0x64, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x5f, 0x62, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x75,
	0x73, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x72, 0x0a, 0x11, 0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x41, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x70, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x43, 0x6c, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x82, 0x02, 0x0a, 0x17, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x68, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65,
	0x61, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x42, 0x75, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x12, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x12, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_machine_learning_v1_machine_learning_proto_rawDescOnce sync.Once
	file_machine_learning_v1_machine_learning_proto_rawDescData = file_machine_learning_v1_machine_learning_proto_rawDesc
)

func file_machine_learning_v1_machine_learning_proto_rawDescGZIP() []byte {
	file_machine_learning_v1_machine_learning_proto_rawDescOnce.Do(func() {
		file_machine_learning_v1_machine_learning_proto_rawDescData = protoimpl.X.CompressGZIP(file_machine_learning_v1_machine_learning_proto_rawDescData)
	})
	return file_machine_learning_v1_machine_learning_proto_rawDescData
}

var file_machine_learning_v1_machine_learning_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_machine_learning_v1_machine_learning_proto_goTypes = []interface{}{
	(*TrainRequest)(nil),              // 0: machine_learning.v1.TrainRequest
	(*TrainResponse)(nil),             // 1: machine_learning.v1.TrainResponse
	(*PredResponse)(nil),              // 2: machine_learning.v1.PredResponse
	(*FaceDetectAndClipRequest)(nil),  // 3: machine_learning.v1.FaceDetectAndClipRequest
	(*FaceDetectAndClipResponse)(nil), // 4: machine_learning.v1.FaceDetectAndClipResponse
	(v1.BusType)(0),                   // 5: where_child_bus.v1.BusType
	(*v1.StreamBusVideoRequest)(nil),  // 6: where_child_bus.v1.StreamBusVideoRequest
}
var file_machine_learning_v1_machine_learning_proto_depIdxs = []int32{
	5, // 0: machine_learning.v1.TrainRequest.bus_type:type_name -> where_child_bus.v1.BusType
	0, // 1: machine_learning.v1.MachineLearningService.Train:input_type -> machine_learning.v1.TrainRequest
	6, // 2: machine_learning.v1.MachineLearningService.Pred:input_type -> where_child_bus.v1.StreamBusVideoRequest
	3, // 3: machine_learning.v1.MachineLearningService.FaceDetectAndClip:input_type -> machine_learning.v1.FaceDetectAndClipRequest
	1, // 4: machine_learning.v1.MachineLearningService.Train:output_type -> machine_learning.v1.TrainResponse
	2, // 5: machine_learning.v1.MachineLearningService.Pred:output_type -> machine_learning.v1.PredResponse
	4, // 6: machine_learning.v1.MachineLearningService.FaceDetectAndClip:output_type -> machine_learning.v1.FaceDetectAndClipResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_machine_learning_v1_machine_learning_proto_init() }
func file_machine_learning_v1_machine_learning_proto_init() {
	if File_machine_learning_v1_machine_learning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_machine_learning_v1_machine_learning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_learning_v1_machine_learning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_learning_v1_machine_learning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_learning_v1_machine_learning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceDetectAndClipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machine_learning_v1_machine_learning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceDetectAndClipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machine_learning_v1_machine_learning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_machine_learning_v1_machine_learning_proto_goTypes,
		DependencyIndexes: file_machine_learning_v1_machine_learning_proto_depIdxs,
		MessageInfos:      file_machine_learning_v1_machine_learning_proto_msgTypes,
	}.Build()
	File_machine_learning_v1_machine_learning_proto = out.File
	file_machine_learning_v1_machine_learning_proto_rawDesc = nil
	file_machine_learning_v1_machine_learning_proto_goTypes = nil
	file_machine_learning_v1_machine_learning_proto_depIdxs = nil
}
